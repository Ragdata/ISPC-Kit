#!/bin/bash
#-------------------------------------------------------------------
# ispc-launch
#-------------------------------------------------------------------
# ISPC Kit - ISPConfig 3 Installer
#
# File:         ispc-launch
# Author:       Ragdata
# Date:         26/01/2021 0035
# License:      MIT License
# Copyright:    2021 ~ Aequitas Veritas Pty Ltd ~ All Rights Reserved
#-------------------------------------------------------------------
# PERFORM COMPATIBILITY CHECKS
#-------------------------------------------------------------------
if [ "${BASH_VERSION:0:1}" -lt 4 ]; then
    echo "ISPC Kit requires a minimum Bash version of 4 - you need to upgrade before you can use this package."
    exit 1
fi
#-------------------------------------------------------------------
# LOAD LIBRARIES
#-------------------------------------------------------------------
baseDir=$PWD
. "$baseDir"/src/inc/common.sh
. "$incDir"/functions.sh
. "$incDir"/registry.sh
#-------------------------------------------------------------------
# INIT
#-------------------------------------------------------------------
# initialise logger
initLog
# if no .defaults file, copy the .defaults.dist file in its place
if [[ ! -f "$DEF" ]] && [[ -f "$DIS" ]]; then cp "$DIS" "$DEF"; fi
# load .defaults
. "$DEF"
# if no .registry file, build it, otherwise load it
if [[ ! -f "$REG" ]]; then buildRegistry; else . "$REG"; fi
#-------------------------------------------------------------------
# GET ARGS
#-------------------------------------------------------------------
if [[ $# ]]; then
    if [[ $# -ge 1 ]] && [[ $1 =~ $isLoc ]]; then REGISTRY[LOC]=$1; shift; fi
else
    REGISTRY[LOC]=${DEFAULTS[LOC]}
fi
if [[ $# ]] && [[ $1 =~ $isFlag ]]; then
    case $1 in
        "-h"|"-help")   flag="help";;
        "-t"|"-test")   flag="test";;
    esac
    shift
fi
#-------------------------------------------------------------------
# MAIN
#-------------------------------------------------------------------
clear
# display help file?
if [[ $flag == "help" ]]; then cat "$docsDir"/.helplaunch; exit 0; fi
# load requested scripts
for script in "$@"
do
    # load source file
    if [[ -f $libDir/$script.sh ]]; then
        clear
        loadSource "$libDir/$script" -f
    elif [[ -f $etcDir/$script.sh ]]; then
        clear
        loadSource "$etcDir/$script" -f
    elif [[ -f $appDir/$script.sh ]]; then
        clear
        loadSource "$appDir/$script" -f
    else
        errorExit "launch ERROR: File $script.sh not found!"
    fi
done
cat "$LOG"